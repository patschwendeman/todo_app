{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick\\\\Documents\\\\Web\\\\React\\\\Todo_App\\\\client\\\\src\\\\app\\\\TodoTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { v4 } from \"uuid\";\nimport axios from \"axios\";\nimport { InputBar } from \"./InputBar\";\nimport { TodosDisplay } from \"./TodoDisplay\";\nimport './TodoTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000';\nlet currentTodos;\nexport const TodoTable = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [enterTodo, setEnterTodo] = useState(''); //Get Todos from DB\n\n  const fetchTodos = async () => {\n    const {\n      data,\n      status\n    } = await axios.get(endpoint + '/todos?_sort=time&_order=desc');\n\n    if (status > 199 && status < 300) {\n      setTodos(data);\n    }\n  }; //Enter Todo handler\n\n\n  const handleEnterTodo = event => {\n    setEnterTodo(event.currentTarget.value);\n  }; //Clear Todo handler\n\n\n  const handleClearTodos = async () => {\n    const {\n      data,\n      status\n    } = await axios.get(endpoint + '/todos?done=true');\n    data.forEach(element => {\n      const res = axios.delete(endpoint + '/todos/' + element.id);\n    });\n    fetchTodos();\n    /* \r\n    const cleanedTodos: Array<Todos> = []\r\n    \n      todos.forEach((element: Todos, index: number) => {\r\n        if(todos[index].done == false){\r\n              cleanedTodos.push(todos[index]);\r\n        }\r\n    });\r\n    \n    setTodos(cleanedTodos);\r\n    */\n  }; //Create Todo handler\n\n\n  const handleCreateTodo = async () => {\n    //create new Todo\n    const newTodo = {\n      //id: todos.length+1,\n      id: v4(),\n      describtion: enterTodo,\n      done: false,\n      time: Date.now()\n    };\n    console.log(typeof newTodo.time);\n    const {\n      status\n    } = await axios.post(endpoint + '/todos', newTodo);\n\n    if (status > 199 && status < 300) {\n      fetchTodos();\n    }\n    /*\r\n    \r\n           setTodos((todos: Array<Todos>) => \r\n        [\r\n            newTodo,\r\n            ...todos\r\n        ]\r\n    );\r\n        */\n\n\n    setEnterTodo('');\n  }; //Delete Todod handler\n\n\n  const handleDeleteTodo = async (MouseEvent, eventTodo) => {\n    const id = eventTodo.id;\n    const {\n      status\n    } = await axios.delete(endpoint + '/todos/' + id);\n\n    if (status > 199 && status < 300) {\n      fetchTodos();\n    }\n    /* \r\n    const newTodos = [...todos];\r\n    newTodos.splice(todos.indexOf(eventTodo), 1);\r\n    \r\n    setTodos(newTodos);\r\n    */\n\n  }; //Status handler\n\n\n  const handleStatus = async (MouseEvent, eventTodo) => {\n    const newStatus = eventTodo.done == true ? false : true;\n    const id = eventTodo.id;\n    const {\n      status\n    } = await axios.patch(endpoint + '/todos/' + id, {\n      \"done\": newStatus\n    });\n\n    if (status > 199 && status < 300) {\n      fetchTodos();\n    }\n    /*\r\n    const newTodos = [ ...todos];\r\n      \r\n    \n    newTodos.forEach((element, index) => {\r\n        if(newTodos[index].id == eventTodo.id){\r\n            newTodos[index].done = newStatus;                \r\n        }\r\n    });\r\n    \r\n    setTodos(newTodos);\r\n      */\n\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoTable\",\n      children: [/*#__PURE__*/_jsxDEV(InputBar, {\n        enterTodo: enterTodo,\n        handleEnterTodo: handleEnterTodo,\n        handleCreateTodo: handleCreateTodo,\n        handleClearTodos: handleClearTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TodosDisplay, {\n        todos: todos,\n        handleDeleteTodo: handleDeleteTodo,\n        handleStatus: handleStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoTable, \"aI0rTX2x6+0lLxoYDYSydl6RP0k=\");\n\n_c = TodoTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoTable\");","map":{"version":3,"sources":["C:/Users/Patrick/Documents/Web/React/Todo_App/client/src/app/TodoTable.tsx"],"names":["useState","useEffect","v4","axios","InputBar","TodosDisplay","endpoint","currentTodos","TodoTable","todos","setTodos","enterTodo","setEnterTodo","fetchTodos","data","status","get","handleEnterTodo","event","currentTarget","value","handleClearTodos","forEach","element","res","delete","id","handleCreateTodo","newTodo","describtion","done","time","Date","now","console","log","post","handleDeleteTodo","MouseEvent","eventTodo","handleStatus","newStatus","patch"],"mappings":";;;AAAA,SAAmEA,QAAnE,EAA6EC,SAA7E,QAA8F,OAA9F;AAEA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAO,iBAAP;;;AAIA,MAAMC,QAAQ,GAAG,uBAAjB;AAMA,IAAIC,YAAJ;AAEA,OAAO,MAAMC,SAA4B,GAAG,MAAoB;AAAA;;AAG5D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAe,EAAf,CAAlC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAS,EAAT,CAA1C,CAJ4D,CAO5D;;AACA,QAAMa,UAAU,GAAG,YAAW;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMZ,KAAK,CAACa,GAAN,CAAUV,QAAQ,GAAG,+BAArB,CAA/B;;AACA,QAAGS,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BL,MAAAA,QAAQ,CAACI,IAAD,CAAR;AAEH;AAEJ,GAPD,CAR4D,CAoB5D;;;AACA,QAAMG,eAAe,GAAIC,KAAD,IAAgD;AACtEN,IAAAA,YAAY,CAACM,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAZ;AACD,GAFD,CArB4D,CA0B5D;;;AACA,QAAMC,gBAAgB,GAAG,YAAW;AAEhC,UAAM;AAAEP,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMZ,KAAK,CAACa,GAAN,CAAUV,QAAQ,GAAG,kBAArB,CAA/B;AACAQ,IAAAA,IAAI,CAACQ,OAAL,CAAcC,OAAD,IAAoB;AAC7B,YAAMC,GAAG,GAAGrB,KAAK,CAACsB,MAAN,CAAanB,QAAQ,GAAG,SAAX,GAAuBiB,OAAO,CAACG,EAA5C,CAAZ;AAEH,KAHD;AAIAb,IAAAA,UAAU;AAEV;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGK,GAtBD,CA3B4D,CAoD5D;;;AACA,QAAMc,gBAAgB,GAAG,YAAY;AAMjC;AACA,UAAMC,OAAO,GAAG;AACZ;AACAF,MAAAA,EAAE,EAAExB,EAAE,EAFM;AAGZ2B,MAAAA,WAAW,EAAElB,SAHD;AAIZmB,MAAAA,IAAI,EAAE,KAJM;AAKZC,MAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AALM,KAAhB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOP,OAAO,CAACG,IAA3B;AAEA,UAAM;AAAEhB,MAAAA;AAAF,QAAa,MAAMZ,KAAK,CAACiC,IAAN,CAAW9B,QAAQ,GAAG,QAAtB,EAAgCsB,OAAhC,CAAzB;;AACA,QAAGb,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BF,MAAAA,UAAU;AACb;AAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIQD,IAAAA,YAAY,CAAC,EAAD,CAAZ;AAGH,GApCD,CArD4D,CA2F5D;;;AACA,QAAMyB,gBAAgB,GAAG,OAAOC,UAAP,EAA+BC,SAA/B,KAAoD;AAEzE,UAAMb,EAAE,GAAGa,SAAS,CAACb,EAArB;AAEA,UAAM;AAAEX,MAAAA;AAAF,QAAa,MAAMZ,KAAK,CAACsB,MAAN,CAAanB,QAAQ,GAAG,SAAX,GAAuBoB,EAApC,CAAzB;;AACA,QAAGX,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BF,MAAAA,UAAU;AACb;AACD;AACR;AACA;AACA;AACA;AACA;;AACK,GAdD,CA5F4D,CA4G5D;;;AACA,QAAM2B,YAAY,GAAG,OAAOF,UAAP,EAA+BC,SAA/B,KAAoD;AAErE,UAAME,SAAS,GAAGF,SAAS,CAACT,IAAV,IAAkB,IAAlB,GAAyB,KAAzB,GAAiC,IAAnD;AACA,UAAMJ,EAAE,GAAGa,SAAS,CAACb,EAArB;AAEA,UAAM;AAAEX,MAAAA;AAAF,QAAa,MAAMZ,KAAK,CAACuC,KAAN,CAAYpC,QAAQ,GAAG,SAAX,GAAuBoB,EAAnC,EAAuC;AAAC,cAAQe;AAAT,KAAvC,CAAzB;;AACA,QAAG1B,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BF,MAAAA,UAAU;AACb;AAED;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGK,GAxBD;;AA0BAZ,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACQ;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,QAAD;AACI,QAAA,SAAS,EAAGF,SADhB;AAEI,QAAA,eAAe,EAAGM,eAFtB;AAGI,QAAA,gBAAgB,EAAGU,gBAHvB;AAII,QAAA,gBAAgB,EAAIN;AAJxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,YAAD;AACI,QAAA,KAAK,EAAGZ,KADZ;AAEI,QAAA,gBAAgB,EAAG4B,gBAFvB;AAGI,QAAA,YAAY,EAAGG;AAHnB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADR;AAkBH,CA9JM;;GAAMhC,S;;KAAAA,S","sourcesContent":["import { FunctionComponent, ReactElement, ChangeEvent, MouseEvent, useState, useEffect } from \"react\";\r\n\r\nimport { v4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { InputBar } from \"./InputBar\";\r\nimport { TodosDisplay } from \"./TodoDisplay\"\r\n\r\nimport './TodoTable.css'\r\n\r\nimport { Todos } from './types/Todos'\r\n\r\nconst endpoint = 'http://localhost:8000';\r\n\r\n\r\n\r\n\r\n\r\nlet currentTodos: Todos  [];  \r\n\r\nexport const TodoTable: FunctionComponent = (): ReactElement => {\r\n   \r\n   \r\n    const [todos, setTodos] = useState<Array<Todos>>([]);   \r\n    const [enterTodo, setEnterTodo] = useState<string>('');\r\n\r\n\r\n    //Get Todos from DB\r\n    const fetchTodos = async() => {\r\n        const { data, status } = await axios.get(endpoint + '/todos?_sort=time&_order=desc');\r\n        if(status > 199 && status < 300){\r\n            setTodos(data);\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n\r\n    //Enter Todo handler\r\n    const handleEnterTodo = (event: ChangeEvent<HTMLInputElement>): void => {\r\n      setEnterTodo(event.currentTarget.value);\r\n    };\r\n  \r\n\r\n    //Clear Todo handler\r\n    const handleClearTodos = async() => {\r\n        \r\n        const { data, status } = await axios.get(endpoint + '/todos?done=true');\r\n        data.forEach((element: Todos) => {\r\n            const res = axios.delete(endpoint + '/todos/' + element.id);\r\n            \r\n        });\r\n        fetchTodos();\r\n\r\n        /* \r\n        const cleanedTodos: Array<Todos> = []\r\n       \r\n\r\n        todos.forEach((element: Todos, index: number) => {\r\n            if(todos[index].done == false){\r\n\r\n                cleanedTodos.push(todos[index]);\r\n            }\r\n        });\r\n       \r\n        setTodos(cleanedTodos);\r\n        */\r\n    }\r\n    \r\n\r\n    //Create Todo handler\r\n    const handleCreateTodo = async () => {\r\n\r\n\r\n        \r\n\r\n         \r\n        //create new Todo\r\n        const newTodo = {\r\n            //id: todos.length+1,\r\n            id: v4(),\r\n            describtion: enterTodo,\r\n            done: false,\r\n            time: Date.now()\r\n        };\r\n        console.log(typeof newTodo.time);\r\n\r\n        const { status } = await axios.post(endpoint + '/todos', newTodo);\r\n        if(status > 199 && status < 300){\r\n            fetchTodos();\r\n        }\r\n        \r\n        /*\r\n        \r\n     \r\n        setTodos((todos: Array<Todos>) => \r\n            [\r\n                newTodo,\r\n                ...todos\r\n            ]\r\n        );\r\n\r\n\r\n        */\r\n        setEnterTodo('');\r\n        \r\n        \r\n    };\r\n\r\n    //Delete Todod handler\r\n    const handleDeleteTodo = async (MouseEvent: MouseEvent ,eventTodo: Todos) => {\r\n        \r\n        const id = eventTodo.id;\r\n        \r\n        const { status } = await axios.delete(endpoint + '/todos/' + id);\r\n        if(status > 199 && status < 300){\r\n            fetchTodos();\r\n        }\r\n        /* \r\n        const newTodos = [...todos];\r\n        newTodos.splice(todos.indexOf(eventTodo), 1);\r\n        \r\n        setTodos(newTodos);\r\n        */   \r\n    }\r\n\r\n    //Status handler\r\n    const handleStatus = async (MouseEvent: MouseEvent ,eventTodo: Todos) => {\r\n        \r\n        const newStatus = eventTodo.done == true ? false : true;\r\n        const id = eventTodo.id;\r\n        \r\n        const { status } = await axios.patch(endpoint + '/todos/' + id, {\"done\": newStatus});\r\n        if(status > 199 && status < 300){\r\n            fetchTodos();\r\n        }\r\n        \r\n        /*\r\n        const newTodos = [ ...todos];\r\n\r\n        \r\n       \r\n        newTodos.forEach((element, index) => {\r\n            if(newTodos[index].id == eventTodo.id){\r\n                newTodos[index].done = newStatus;                \r\n            }\r\n        });\r\n        \r\n        setTodos(newTodos);\r\n\r\n        */\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, []);\r\n  \r\n  \r\n    return(\r\n            <>  \r\n                <div className=\"todoTable\">\r\n                    <InputBar \r\n                        enterTodo={ enterTodo } \r\n                        handleEnterTodo={ handleEnterTodo } \r\n                        handleCreateTodo={ handleCreateTodo }\r\n                        handleClearTodos= { handleClearTodos }\r\n                    />\r\n                    \r\n                    <TodosDisplay \r\n                        todos={ todos } \r\n                        handleDeleteTodo={ handleDeleteTodo } \r\n                        handleStatus={ handleStatus }\r\n                    /> \r\n                </div>    \r\n            </>      \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}