{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrick\\\\Documents\\\\GitHub\\\\todo_app\\\\client\\\\src\\\\app\\\\TodoTable.tsx\",\n    _s = $RefreshSig$();\n\n//import modules\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'; //import components\n\nimport { InputBar } from './InputBar';\nimport { TodosDisplay } from './TodoDisplay';\nimport { v4 } from 'uuid'; //import stylesheets\n\nimport '../styles/TodoTable.css'; //define endpoint for database\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000';\n\nconst TodoTable = () => {\n  _s();\n\n  //Hooks\n  const [todos, setTodos] = useState([]);\n  const [enterTodo, setEnterTodo] = useState(''); //Get Todos from DB\n\n  const fetchTodos = async () => {\n    const {\n      data,\n      status\n    } = await axios.get(endpoint + '/todos?_sort=time&_order=desc');\n\n    if (status > 199 && status < 300) {\n      setTodos(data);\n    }\n  }; //Enter Todo handler\n\n\n  const handleEnterTodo = event => {\n    setEnterTodo(event.currentTarget.value);\n  }; //Clear Todo handler\n\n\n  const handleClearTodos = async () => {\n    const {\n      data,\n      status\n    } = await axios.get(endpoint + '/todos?done=true');\n    data.forEach(element => {\n      axios.delete(endpoint + '/todos/' + element.id);\n    });\n\n    if (status > 199 && status < 300) {\n      fetchTodos();\n    }\n  }; //Create Todo handler\n\n\n  const handleCreateTodo = async () => {\n    //Create new Todo\n    const newTodo = {\n      id: v4(),\n      describtion: enterTodo,\n      done: false,\n      time: Date.now()\n    };\n    const {\n      status\n    } = await axios.post(endpoint + '/todos', newTodo);\n\n    if (status > 199 && status < 300) {\n      fetchTodos();\n    }\n\n    setEnterTodo('');\n  }; //Delete Todod handler\n\n\n  const handleDeleteTodo = async (MouseEvent, eventTodo) => {\n    const id = eventTodo.id;\n    const {\n      status\n    } = await axios.delete(endpoint + '/todos/' + id);\n\n    if (status > 199 && status < 300) {\n      fetchTodos();\n    }\n  }; //Status handler\n\n\n  const handleStatus = async (MouseEvent, eventTodo) => {\n    const newStatus = eventTodo.done === true ? false : true;\n    const id = eventTodo.id;\n    const {\n      status\n    } = await axios.patch(endpoint + '/todos/' + id, {\n      \"done\": newStatus\n    });\n\n    if (status > 199 && status < 300) {\n      fetchTodos();\n    }\n  }; //Get Todos when open app\n\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoTable\",\n      children: [/*#__PURE__*/_jsxDEV(InputBar, {\n        enterTodo: enterTodo,\n        handleEnterTodo: handleEnterTodo,\n        handleCreateTodo: handleCreateTodo,\n        handleClearTodos: handleClearTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TodosDisplay, {\n        todos: todos,\n        handleDeleteTodo: handleDeleteTodo,\n        handleStatus: handleStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoTable, \"aI0rTX2x6+0lLxoYDYSydl6RP0k=\");\n\n_c = TodoTable;\nexport { TodoTable };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoTable\");","map":{"version":3,"sources":["C:/Users/Patrick/Documents/GitHub/todo_app/client/src/app/TodoTable.tsx"],"names":["useState","useEffect","axios","InputBar","TodosDisplay","v4","endpoint","TodoTable","todos","setTodos","enterTodo","setEnterTodo","fetchTodos","data","status","get","handleEnterTodo","event","currentTarget","value","handleClearTodos","forEach","element","delete","id","handleCreateTodo","newTodo","describtion","done","time","Date","now","post","handleDeleteTodo","MouseEvent","eventTodo","handleStatus","newStatus","patch"],"mappings":";;;AAAA;AACA,SAAmEA,QAAnE,EAA6EC,SAA7E,QAA8F,OAA9F;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,SAASC,EAAT,QAAmB,MAAnB,C,CACA;;AACA,OAAO,yBAAP,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAG,uBAAjB;;AAGA,MAAMC,SAA4B,GAAG,MAAoB;AAAA;;AAErD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAe,EAAf,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAS,EAAT,CAA1C,CAJqD,CAOrD;;AACA,QAAMY,UAAU,GAAG,YAAW;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMZ,KAAK,CAACa,GAAN,CAAUT,QAAQ,GAAG,+BAArB,CAA/B;;AACA,QAAGQ,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BL,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACH;AACJ,GALD,CARqD,CAgBrD;;;AACA,QAAMG,eAAe,GAAIC,KAAD,IAAgD;AACtEN,IAAAA,YAAY,CAACM,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAZ;AACD,GAFD,CAjBqD,CAsBrD;;;AACA,QAAMC,gBAAgB,GAAG,YAAW;AAEhC,UAAM;AAAEP,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMZ,KAAK,CAACa,GAAN,CAAUT,QAAQ,GAAG,kBAArB,CAA/B;AACAO,IAAAA,IAAI,CAACQ,OAAL,CAAcC,OAAD,IAAoB;AAC7BpB,MAAAA,KAAK,CAACqB,MAAN,CAAajB,QAAQ,GAAG,SAAX,GAAuBgB,OAAO,CAACE,EAA5C;AAEH,KAHD;;AAIA,QAAGV,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BF,MAAAA,UAAU;AACb;AACJ,GAVD,CAvBqD,CAoCrD;;;AACA,QAAMa,gBAAgB,GAAG,YAAY;AAEjC;AACA,UAAMC,OAAO,GAAG;AAEZF,MAAAA,EAAE,EAAEnB,EAAE,EAFM;AAGZsB,MAAAA,WAAW,EAAEjB,SAHD;AAIZkB,MAAAA,IAAI,EAAE,KAJM;AAKZC,MAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AALM,KAAhB;AASA,UAAM;AAAEjB,MAAAA;AAAF,QAAa,MAAMZ,KAAK,CAAC8B,IAAN,CAAW1B,QAAQ,GAAG,QAAtB,EAAgCoB,OAAhC,CAAzB;;AAEA,QAAGZ,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BF,MAAAA,UAAU;AACb;;AACDD,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAlBD,CArCqD,CA0DrD;;;AACA,QAAMsB,gBAAgB,GAAG,OAAOC,UAAP,EAA+BC,SAA/B,KAAoD;AAEzE,UAAMX,EAAE,GAAGW,SAAS,CAACX,EAArB;AAEA,UAAM;AAAEV,MAAAA;AAAF,QAAa,MAAMZ,KAAK,CAACqB,MAAN,CAAajB,QAAQ,GAAG,SAAX,GAAuBkB,EAApC,CAAzB;;AAEA,QAAGV,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BF,MAAAA,UAAU;AACb;AACJ,GATD,CA3DqD,CAuErD;;;AACA,QAAMwB,YAAY,GAAG,OAAOF,UAAP,EAA+BC,SAA/B,KAAoD;AAErE,UAAME,SAAS,GAAGF,SAAS,CAACP,IAAV,KAAmB,IAAnB,GAA0B,KAA1B,GAAkC,IAApD;AACA,UAAMJ,EAAE,GAAGW,SAAS,CAACX,EAArB;AAEA,UAAM;AAAEV,MAAAA;AAAF,QAAa,MAAMZ,KAAK,CAACoC,KAAN,CAAYhC,QAAQ,GAAG,SAAX,GAAuBkB,EAAnC,EAAuC;AAAC,cAAQa;AAAT,KAAvC,CAAzB;;AAEA,QAAGvB,MAAM,GAAG,GAAT,IAAgBA,MAAM,GAAG,GAA5B,EAAgC;AAC5BF,MAAAA,UAAU;AACb;AACJ,GAVD,CAxEqD,CAoFrD;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACQ;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,QAAD;AACI,QAAA,SAAS,EAAGF,SADhB;AAEI,QAAA,eAAe,EAAGM,eAFtB;AAGI,QAAA,gBAAgB,EAAGS,gBAHvB;AAII,QAAA,gBAAgB,EAAIL;AAJxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,YAAD;AACI,QAAA,KAAK,EAAGZ,KADZ;AAEI,QAAA,gBAAgB,EAAGyB,gBAFvB;AAGI,QAAA,YAAY,EAAGG;AAHnB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADR;AAkBH,CA5GD;;GAAM7B,S;;KAAAA,S;AA8GN,SAASA,SAAT","sourcesContent":["//import modules\r\nimport { FunctionComponent, ReactElement, ChangeEvent, MouseEvent, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n//import components\r\nimport { InputBar } from './InputBar';\r\nimport { TodosDisplay } from './TodoDisplay';\r\nimport { Todos } from '../types/Todos';\r\nimport { v4 } from 'uuid';\r\n//import stylesheets\r\nimport '../styles/TodoTable.css';\r\n\r\n//define endpoint for database\r\nconst endpoint = 'http://localhost:8000';\r\n\r\n\r\nconst TodoTable: FunctionComponent = (): ReactElement => {\r\n    \r\n    //Hooks\r\n    const [todos, setTodos] = useState<Array<Todos>>([]);   \r\n    const [enterTodo, setEnterTodo] = useState<string>('');\r\n\r\n\r\n    //Get Todos from DB\r\n    const fetchTodos = async() => {\r\n        const { data, status } = await axios.get(endpoint + '/todos?_sort=time&_order=desc');\r\n        if(status > 199 && status < 300){\r\n            setTodos(data);            \r\n        }\r\n    }    \r\n\r\n\r\n    //Enter Todo handler\r\n    const handleEnterTodo = (event: ChangeEvent<HTMLInputElement>): void => {\r\n      setEnterTodo(event.currentTarget.value);\r\n    };\r\n  \r\n\r\n    //Clear Todo handler\r\n    const handleClearTodos = async() => {\r\n        \r\n        const { data, status } = await axios.get(endpoint + '/todos?done=true');\r\n        data.forEach((element: Todos) => {\r\n            axios.delete(endpoint + '/todos/' + element.id);\r\n            \r\n        });\r\n        if(status > 199 && status < 300){\r\n            fetchTodos();\r\n        }\r\n    }\r\n    \r\n\r\n    //Create Todo handler\r\n    const handleCreateTodo = async () => {\r\n\r\n        //Create new Todo\r\n        const newTodo = {\r\n            \r\n            id: v4(),\r\n            describtion: enterTodo,\r\n            done: false,\r\n            time: Date.now()\r\n        };\r\n\r\n\r\n        const { status } = await axios.post(endpoint + '/todos', newTodo);\r\n\r\n        if(status > 199 && status < 300){\r\n            fetchTodos();\r\n        }\r\n        setEnterTodo('');   \r\n    };\r\n\r\n\r\n    //Delete Todod handler\r\n    const handleDeleteTodo = async (MouseEvent: MouseEvent ,eventTodo: Todos) => {\r\n        \r\n        const id = eventTodo.id;\r\n        \r\n        const { status } = await axios.delete(endpoint + '/todos/' + id);\r\n\r\n        if(status > 199 && status < 300){\r\n            fetchTodos();\r\n        }  \r\n    }\r\n\r\n\r\n    //Status handler\r\n    const handleStatus = async (MouseEvent: MouseEvent ,eventTodo: Todos) => {\r\n        \r\n        const newStatus = eventTodo.done === true ? false : true;\r\n        const id = eventTodo.id;\r\n        \r\n        const { status } = await axios.patch(endpoint + '/todos/' + id, {\"done\": newStatus});\r\n\r\n        if(status > 199 && status < 300){\r\n            fetchTodos();\r\n        }\r\n    }\r\n\r\n    //Get Todos when open app\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, []);\r\n  \r\n  \r\n    return(\r\n            <>  \r\n                <div className=\"todoTable\">\r\n                    <InputBar \r\n                        enterTodo={ enterTodo } \r\n                        handleEnterTodo={ handleEnterTodo } \r\n                        handleCreateTodo={ handleCreateTodo }\r\n                        handleClearTodos= { handleClearTodos }\r\n                    />\r\n                    \r\n                    <TodosDisplay \r\n                        todos={ todos } \r\n                        handleDeleteTodo={ handleDeleteTodo } \r\n                        handleStatus={ handleStatus }\r\n                    /> \r\n                </div>    \r\n            </>      \r\n    );\r\n}\r\n\r\nexport { TodoTable };"]},"metadata":{},"sourceType":"module"}